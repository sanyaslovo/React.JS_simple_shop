{"version":3,"sources":["redux/cart/cart.types.js","Routes.jsx","redux/cart/cart.reducer.js","redux/root.reducer.js","redux/store.js","App.jsx","index.jsx"],"names":["cartActionTypes","ADD_ITEM_TO_CART","REMOVE_ITEM_FROM_CART","ENCREASE_CART_ITEM","DESCREASE_CART_ITEM","routesConfig","exact","path","component","lazy","__webpack_require__","e","then","bind","Promise","all","renderRoutes","routes","react_default","a","createElement","react","fallback","react_loader_default","loaded","lines","length","width","radius","corners","rotate","direction","color","speed","trail","shadow","hwaccel","className","zIndex","top","left","scale","loadedClassName","react_router","map","route","i","Guard","guard","Fragment","Layout","layout","Component","key","render","props","Routes","INITIAL_STATE","cartItems","cartReducer","state","arguments","undefined","action","type","find","cartItem","id","payload","Object","objectSpread","quantity","toConsumableArray","concat","newCartItems","filter","product","encreaseItem","descreaseItem","persistConfig","storage","whitelist","rootReducer","combineReducers","cart","persistReducer","store","createStore","persistor","persistStore","history","createBrowserHistory","App","es","integration_react","src_Routes","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3be119d4.chunk.js","sourcesContent":["const cartActionTypes = {\r\n    ADD_ITEM_TO_CART: \"ADD_ITEM_TO_CART\",\r\n    REMOVE_ITEM_FROM_CART: \"REMOVE_ITEM_FROM_CART\",\r\n    ENCREASE_CART_ITEM: \"ENCREASE_CART_ITEM\",\r\n    DESCREASE_CART_ITEM: \"DESCREASE_CART_ITEM\"\r\n};\r\n\r\nexport default cartActionTypes;\r\n","import React, {\r\n    lazy,\r\n    Suspense,\r\n    Fragment\r\n} from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Loader from \"react-loader\";\r\n\r\nconst routesConfig = [\r\n    {\r\n        exact: true,\r\n        path: '/',\r\n        component: lazy(() => import('./pages/home-page/HomePage'))\r\n    },\r\n    {\r\n        exact: true,\r\n        path: '/shop',\r\n        component: lazy(() => import('./pages/shop-page/ShopPage'))\r\n    },\r\n    {\r\n        exact: true,\r\n        path: '/contact',\r\n        component: lazy(() => import('./pages/contact-page/ContactPage'))\r\n    },\r\n    {\r\n        exact: true,\r\n        path: '/sign-in',\r\n        component: lazy(() => import('./pages/sign-in-page/SignInPage'))\r\n    },\r\n    {\r\n        exact: true,\r\n        path: '/checkout',\r\n        component: lazy(() => import('./pages/checkout-page/CheckoutPage'))\r\n    },\r\n    {\r\n        exact: true,\r\n        path: '/shop/:category',\r\n        component: lazy(() => import('../src/pages/category-page/CategoryPage'))\r\n    },\r\n    {\r\n        exact: true,\r\n        path: '*',\r\n        component: lazy(() => import('./pages/not-found-page/NotFoundPage'))\r\n    }\r\n]\r\n\r\n\r\nconst renderRoutes = (routes) => (routes ? (\r\n    <Suspense fallback={\r\n        <Loader\r\n            loaded={true}\r\n            lines={13}\r\n            length={20}\r\n            width={10}\r\n            radius={30}\r\n            corners={1}\r\n            rotate={0}\r\n            direction={1}\r\n            color=\"#000\"\r\n            speed={1}\r\n            trail={60}\r\n            shadow={false}\r\n            hwaccel={false}\r\n            className=\"spinner\"\r\n            zIndex={2e9}\r\n            top=\"50%\"\r\n            left=\"50%\"\r\n            scale={1.0}\r\n            loadedClassName=\"loadedContent\"\r\n        />\r\n    }>\r\n        <Switch>\r\n            {routes.map((route, i) => {\r\n                const Guard = route.guard || Fragment;\r\n                const Layout = route.layout || Fragment;\r\n                const Component = route.component;\r\n\r\n                return (\r\n                    <Route\r\n                        key={i}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        render={(props) => (\r\n                            <Guard>\r\n                                <Layout>\r\n                                    {route.routes\r\n                                        ? renderRoutes(route.routes)\r\n                                        : <Component {...props} />}\r\n                                </Layout>\r\n                            </Guard>\r\n                        )}\r\n                    />\r\n                );\r\n            })}\r\n        </Switch>\r\n    </Suspense>\r\n) : null);\r\n\r\n\r\n\r\nfunction Routes() {\r\n    return renderRoutes(routesConfig);\r\n}\r\n\r\nexport default Routes;\r\n","import cartActionTypes from \"./cart.types\";\r\n\r\nconst INITIAL_STATE = {\r\n    cartItems: []\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case cartActionTypes.ADD_ITEM_TO_CART:\r\n            const existingCartItem = state.cartItems.find(\r\n                cartItem => cartItem.id === action.payload.id\r\n            );\r\n            if (existingCartItem){\r\n                const cartItems = state.cartItems.map(cartItem =>\r\n                      cartItem.id === action.payload.id\r\n                          ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n                          : cartItem\r\n                )\r\n                return {\r\n                    ...state,\r\n                    cartItems: [ ...cartItems ]\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, action.payload]\r\n            }\r\n        case cartActionTypes.REMOVE_ITEM_FROM_CART:\r\n            const newCartItems = state.cartItems.filter(product => product.id !== action.payload)\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems]\r\n            }\r\n        case cartActionTypes.ENCREASE_CART_ITEM:\r\n            const encreaseItem = state.cartItems.map(product => {\r\n                if (product.id === action.payload) {\r\n                    product.quantity += 1\r\n                    return product\r\n                }\r\n                return product\r\n            })\r\n            return {\r\n                ...state,\r\n                cartItems: [...encreaseItem]\r\n            }\r\n        case cartActionTypes.DESCREASE_CART_ITEM:\r\n            const descreaseItem = state.cartItems.map(product => {\r\n                if (product.id === action.payload && product.quantity>0) {\r\n                    product.quantity -= 1\r\n                    return product\r\n                }\r\n                return product\r\n            })\r\n            return {\r\n                ...state,\r\n                cartItems: [...descreaseItem]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport storage from \"redux-persist/lib/storage\"\r\nimport cartReducer from \"./cart/cart.reducer\";\r\nimport { persistReducer } from \"redux-persist\"\r\n\r\nconst persistConfig = {\r\n    key: 'root',            // where in our reducer do  we want to store\r\n    storage,\r\n\r\n    whitelist: [\"cart\"]  // a list that specifies which state props we want to persist\r\n\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    cart: cartReducer\r\n});\r\nexport default persistReducer(persistConfig, rootReducer)","import { createStore } from \"redux\";\r\nimport { persistStore } from 'redux-persist';\r\nimport rootReducer from \"./root.reducer\";\r\n\r\n\r\nexport const store = createStore(rootReducer);\r\nexport const persistor = persistStore(store);\r\nexport default {store, persistor}","import React from \"react\";\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport Routes from '../src/Routes';\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\n\r\nimport './App.css';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst App = () => {\r\n  return (\r\n      <Provider store={store}>\r\n          <Router history={history}>\r\n              <PersistGate persistor={persistor}>\r\n                <Routes />\r\n              </PersistGate>\r\n          </Router>\r\n      </Provider>\r\n  )\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}